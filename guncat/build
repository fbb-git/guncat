#!/usr/bin/icmake -qt/tmp/guncat

#include "icmconf"

string  g_home;
string  g_logPath;
list    g_logs;

#include "icmake/setopt"
#include "icmake/run"
#include "icmake/md"
#include "icmake/special"
#include "icmake/readlog"
#include "icmake/findkey"
#include "icmake/valueof"
#include "icmake/remove"
#include "icmake/writelog"
#include "icmake/update"

#include "icmake/clean"
#include "icmake/manpage"
#include "icmake/install"
#include "icmake/uninstall"
#include "icmake/github"

string  g_cwd = chdir("");  // initial working directory

void main(int argc, list argv)
{
    string option;
    string strip;

    g_home = getenv("HOME")[1] + "/";

    option = argv[1];

    if (option == "clean")
        clean(0);

    if (option == "distclean")
        clean(1);

    if (option == "install")
        install(argv[2], argv[3], argv[4]);

    if (option == "uninstall")
        uninstall(argv[2]);

    if (option != "")
        special();

    if (option == "github")
        github();

    if (option == "man")
        manpage();

    if (option == "library")
    {
        system("icmbuild library");
        exit(0);
    }

    if (argv[2] == "strip")
        strip = "strip";
    
    if (option == "program")
    {
        system("icmbuild program " + strip);
        exit(0);
    }

    if (option == "oxref")
    {
        system("icmbuild program " + strip);
        run("oxref -fxs tmp/lib" LIBRARY ".a > " PROJECT ".xref");
        exit(0);
    }

    printf("Usage: build [-p] what\n"
        "Where `what' is one of:\n"
        "   clean                      - clean up remnants of previous "
                                                            "compilations\n"
        "   distclean                  - clean + fully remove tmp/\n"
        "   library                    - build " PROJECT "'s library\n"
        "   man                        - build the man-page (requires "
                                                            "Yodl)\n"
        "   program [strip]            - build " PROJECT " (optionally "
                                                            "strip the\n"
        "                                executable)\n"
        "   oxref [strip]              - same a `program', also builds "
                                                            "xref file\n"
        "                                using oxref\n"
        "\n"
        "  Below [log] is the file logging the locations of installed files\n"
        "  if empty, nothing is logged;  if -, the log file is " LOGFILE "\n"
        "  otherwise the specified location (absolute, or relative to\n", 
        "  ", g_home, ") is used\n"
        "\n"
        "   install program [fullpath] [log] - install " PROJECT ", \n"
        "                                  by default `" BINARY "',\n"
        "                                  otherwise as `fullpath'\n"
        "   install man [base] [log]     - install the man pages below "
                                                            "`base'\n"
        "                                  (by default `./" MAN "')\n"
        "   install std [base] [log]     - install standard docs below "
                                                            "`base'\n"
        "                                  (by default `./" STD "')\n"
        "   uninstall log                - remove all files and empty "
                                                            "directories\n"
        "                                  mentioned in log as well as "
                                                            "log itself\n"
        "   github                       - prepare github's gh-pages update\n"
        "                                  (internal use only)\n"
        "\n"
    );
    exit(1);
}
